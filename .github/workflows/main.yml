name: CI/CD Pipeline

on:
    push:
        branches: ['main', 'stage', 'dev']
    pull_request:
        branches: ['main', 'stage', 'dev']

env:
    artifact-name: build-artifact    

jobs:
    # build:
    #     runs-on: ubuntu-latest
    #     container:
    #         image: public.ecr.aws/docker/library/gradle:7.3.3-jdk17-alpine
    #     steps:
    #         - uses: actions/checkout@v4
    #         - name: Build project
    #           run: |
    #             ./gradlew --version
    #             ./gradlew assemble --info
    #         - name: Upload artifacts
    #           uses: actions/upload-artifact@v4
    #           with:
    #             name: ${{ env.artifact-name }}
    #             path: ./build
    #             retention-days: 1

    publish:
        # needs: [build]
        runs-on: ubuntu-latest
        if: github.ref_name == 'main' || github.ref_name == 'stage' || github.ref_name == 'dev'
        environment: ${{ 
            github.ref_name == 'main' && 'prod' || 
            github.ref_name == 'stage' && 'stage' || 
            github.ref_name == 'dev' && 'dev'
            }}
        env:
            AWS_REGION: us-east-1
            AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
            ECR_REPOSITORY: org-sam/repo
            DOCKER_TAG: v${{ github.run_number }}
        steps:
            - uses: actions/checkout@v4
            # - name: Download artifacts
            #   uses: actions/download-artifact@v4
            #   with:
            #     name: ${{ env.artifact-name }}
            #     path: ./build
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3        
            - name: Docker Buildx
              uses: docker/setup-buildx-action@v3      
            - name: Set up AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ env.AWS_REGION }}      
            - name: Login no Amazon ECR
              uses: aws-actions/amazon-ecr-login@v2
            - name: Push image
              uses: docker/build-push-action@v6
              with:
                context: .
                platforms: linux/amd64,linux/arm64
                push: true
                tags: |
                  ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.DOCKER_TAG }}
                  ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest
            # - uses: kciter/aws-ecr-action@v3
            #   with:
            #     access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            #     secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            #     account_id: ${{ secrets.AWS_ACCOUNT_ID }}
            #     repo: org-sam/repo
            #     region: us-east-1
            #     tags: ${{ github.sha }}
            #     create_repo: true
            #     image_scanning_configuration: false



        
              
        
              