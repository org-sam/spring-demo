name: 2- CI/CD Pipeline

on:
    push:
        branches: ['main', 'stage', 'dev']
    pull_request:
        branches: ['main', 'stage', 'dev']
    workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
    build-and-publish:
      runs-on: ubuntu-latest
      environment: ${{ 
          github.ref_name == 'main' && 'prod' || 
          github.ref_name == 'stage' && 'stage' || 
          github.ref_name == 'dev' && 'dev'
          }}
      env:
          IMAGE_REPO: "${{ github.repository }}/${{ github.ref_name }}"
          URI_ECR: "${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com"
      steps:
        - uses: actions/checkout@v4

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/github-oicd
            aws-region: ${{ vars.AWS_REGION }}

        - name: Login to Amazon ECR
          uses: aws-actions/amazon-ecr-login@v2

        - name: Ensure ECR Repository Exists
          run: |
            aws ecr describe-repositories --repository-names "${{ env.IMAGE_REPO }}" || \
            aws ecr create-repository --repository-name "${{ env.IMAGE_REPO }}"

        - name: Build and Push Docker image using Buildpacks
          uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: |
              ${{ env.URI_ECR }}/${{ env.IMAGE_REPO }}:${{ github.run_id }}
              ${{ env.URI_ECR }}/${{ env.IMAGE_REPO }}:latest
            builder: paketobuildpacks/builder:base
    
            
