name: 1- CI/CD Pipeline

on:
    # push:
    #     branches: ['main', 'stage', 'dev']
    # pull_request:
    #     branches: ['main', 'stage', 'dev']
    workflow_dispatch:

permissions:
  id-token: write

jobs:
    build:
        uses: org-sam-2/templates-ci/.github/workflows/build-java.yaml@main
        with:
          container_image: public.ecr.aws/docker/library/gradle:7.3.3-jdk17-alpine
          build_commands: |
            ./gradlew --version
            ./gradlew assemble --info
          artifact_paths: |
            build/
          retention_days: 1

    publish:
        needs: [build]
        uses: org-sam-2/templates-ci/.github/workflows/publish-aws-ecr.yaml@main
        with:
          runs_on: ubuntu-latest
          environment: ${{ 
            github.ref_name == 'main' && 'prod' || 
            github.ref_name == 'stage' && 'stage' || 
            github.ref_name == 'dev' && 'dev'
            }}
          downloaded_name_artifacts: artifacts
          dockerfile: ./Dockerfile
          docker_build_context: .
          docker_push_ecr: true
          hadolint_no_fail: true
          aws_role_last_name: github-oicd
          multi_platform: 'false'
    
    # deploy:
    #     needs: [publish]
    #     runs-on: ubuntu-latest
    #     if: github.ref_name == 'main' || github.ref_name == 'stage' || github.ref_name == 'dev'
    #     environment: ${{ 
    #         github.ref_name == 'main' && 'prod' || 
    #         github.ref_name == 'stage' && 'stage' || 
    #         github.ref_name == 'dev' && 'dev'
    #         }}
    #     env:
    #         AWS_REGION: us-east-1
    #     steps:
    #         - name: Extract repository name
    #           run: |
    #             PROJECT_NAME=$(echo "${{ github.repository }}" | awk -F'/' '{print $2}')
    #             echo "PROJECT_NAME=$PROJECT_NAME" >> $GITHUB_ENV
    #         - uses: actions/checkout@v4
    #         - name: Checkout helm-charts repository
    #           uses: actions/checkout@v4
    #           with:
    #             repository: org-sam/helm-charts
    #             path: helm-charts
    #         - name: Set up AWS credentials
    #           uses: aws-actions/configure-aws-credentials@v4
    #           with:
    #             aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #             aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #             aws-region: ${{ env.AWS_REGION }}
    #         - name: Set up kubeconfig
    #           run: echo "aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}"
    #         - name: Verify hashs of helm-charts
    #           run: find ./helm-charts/${{ env.PROJECT_NAME}}/ -type f -exec md5sum {} +
    #         - name: Deploy in kubernetes
    #           run: |
    #             echo 'helm upgrade ${{ env.PROJECT_NAME}} ./helm-charts/${{ env.PROJECT_NAME}} \
    #                 -f ./helm-charts/${{ env.PROJECT_NAME}}/${{ github.ref_name }}.yaml \
    #                 --atomic \
    #                 --install \
    #                 --debug \
    #                 --namespace ${{ env.PROJECT_NAME}} \
    #                 --set image="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_TAG }}" \
    #                 --set tagsDatadogVersion="v${{ github.run_id }}" \
    #                 --set ddGitCommitSHA="${{ github.sha }}" \
    #                 --set ddGitRepositoryURL="https://github.com/${{ github.repository }}" \
    #                 --timeout 10m'


            
